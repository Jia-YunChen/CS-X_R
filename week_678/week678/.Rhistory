qq[site]<-1
}else{
qq[site]<-2
}
ox(qq)
R<-(R+1)
if((qq[1]==qq[2])&&(qq[2]==qq[3])&&(qq[1]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[4]==qq[5])&&(qq[5]==qq[6])&&(qq[4]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[7]==qq[8])&&(qq[8]==qq[9])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[1]==qq[4])&&(qq[4]==qq[7])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[2]==qq[5])&&(qq[5]==qq[8])&&(qq[8]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[3]==qq[6])&&(qq[6]==qq[9])&&(qq[9]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[1]==qq[5])&&(qq[5]==qq[9])&&(qq[9]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[3]==qq[5])&&(qq[5]==qq[7])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
}
for(i in 1:3){
for(j in 1:3){
at<-((i-1)*3+j)
if (qq[at]==1){
cat("O")
}else if(qq[at]==2){
cat("X")
}else{
cat(' ')
}
if((j==3)&&(i!=3) ){
cat('\n_____\n')
}else{
if(j!=3){
cat('|')
}
}
}
if(i==3){cat('\n**************\n')}
}
}
ox<-function(qq){
for(i in 1:3){
for(j in 1:3){
at<-((i-1)*3+j)
if (qq[at]==1){
cat("O")
}else if(qq[at]==2){
cat("X")
}else{
cat(' ')
}
if((j==3)&&(i!=3) ){
cat('\n_____\n')
}else{
if(j!=3){
cat('|')
}
}
}
if(i==3){cat('\n**************\n')}
}
}
R<-0
qq<-c(0,0,0,0,0,0,0,0,0)
while(R<9){
cat('Round',R,'\n')
if(R%%2==0){
cat("Now is player A's term!")
}else{
cat("Now is player B's term!")
}
site<-readline('請輸入1~9')
if (site=='exit'){
cat('Bye-Bye!!')
break
}
site<-as.integer(site)
if((site>9)||(site<1)){
cat('Invalid input! Please re-enter!')
next
}
if(qq[site]!=0){
cat('This position is already occupied!')
next
}
if(R%%2==0){
qq[site]<-1
}else{
qq[site]<-2
}
ox(qq)
R<-(R+1)
if((qq[1]==qq[2])&&(qq[2]==qq[3])&&(qq[1]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[4]==qq[5])&&(qq[5]==qq[6])&&(qq[4]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[7]==qq[8])&&(qq[8]==qq[9])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[1]==qq[4])&&(qq[4]==qq[7])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[2]==qq[5])&&(qq[5]==qq[8])&&(qq[8]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[3]==qq[6])&&(qq[6]==qq[9])&&(qq[9]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[1]==qq[5])&&(qq[5]==qq[9])&&(qq[9]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
break
}else{
cat('Player B wins!!!')
break
}
}
if((qq[3]==qq[5])&&(qq[5]==qq[7])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
}
ox<-function(qq){
for(i in 1:3){
for(j in 1:3){
at<-((i-1)*3+j)
if (qq[at]==1){
cat("O")
}else if(qq[at]==2){
cat("X")
}else{
cat(' ')
}
if((j==3)&&(i!=3) ){
cat('\n_____\n')
}else{
if(j!=3){
cat('|')
}
}
}
if(i==3){cat('\n**************\n')}
}
}
R<-0
qq<-c(0,0,0,0,0,0,0,0,0)
while(R<9){
cat('Round',R,'\n')
if(R%%2==0){
cat("Now is player A's term!")
}else{
cat("Now is player B's term!")
}
site<-readline('請輸入1~9')
if (site=='exit'){
cat('Bye-Bye!!')
break
}
site<-as.integer(site)
if((site>9)||(site<1)){
cat('Invalid input! Please re-enter!')
next
}
if(qq[site]!=0){
cat('This position is already occupied!')
next
}
if(R%%2==0){
qq[site]<-1
}else{
qq[site]<-2
}
ox(qq)
if((qq[1]==qq[2])&&(qq[2]==qq[3])&&(qq[1]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[4]==qq[5])&&(qq[5]==qq[6])&&(qq[4]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[7]==qq[8])&&(qq[8]==qq[9])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[1]==qq[4])&&(qq[4]==qq[7])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[2]==qq[5])&&(qq[5]==qq[8])&&(qq[8]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[3]==qq[6])&&(qq[6]==qq[9])&&(qq[9]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
if((qq[1]==qq[5])&&(qq[5]==qq[9])&&(qq[9]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
break
}else{
cat('Player B wins!!!')
break
}
}
if((qq[3]==qq[5])&&(qq[5]==qq[7])&&(qq[7]!=0)){
if(R%%2==0){
cat('Player A wins!!!')
}else{
cat('Player B wins!!!')
}
}
R<-(R+1)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) +  geom_bar(fill = "lightblue", colour = "black")
ggplot(data = diamonds, aes(x = price)) +  geom_histogram()
ggplot(data = diamonds, aes(x = table, y=depth)) +  geom_point()
ggplot(diamonds, aes(x=clarity, y=depth)) +  geom_boxplot()
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# 從數據集獲取10000個樣本數據進行分析
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp,lower= list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
install.packages("GGally")
install.packages("scales")
install.packages("memisc")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages("scales")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) +  geom_bar(fill = "lightblue", colour = "black")
# 從數據集獲取10000個樣本數據進行分析
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp,lower= list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
source('C:/GitHub/CS-X_R/week_2/fuck you.R', encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) +  geom_bar(fill = "lightblue", colour = "black")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) +  geom_bar(fill = "lightblue", colour = "black")
knitr::opts_chunk$set(echo = TRUE)
library(xml2)
library(rvest)
library("NLP")
install.packages("NLP")
library("NLP")
library("tm")
install.packages("tm")
install.packages("SnowballC")
install.packages("RColorBrewer")
install.packages("wordcloud2")
install.packages("wordcloud")
library("tm")
library("SnowballC")
library("RColorBrewer")
library("wordcloud")
URL <- "https://www.juzimi.com/tags/26437"
title <- read_html(URL) %>% html_nodes(".xlistju") %>% html_text()
docs <- Corpus(VectorSource(title))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
head(d, 10)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
new.dtm <- TermDocumentMatrix(docs)
new.m <- as.matrix(new.dtm)
new.v <- sort(rowSums(new.m),decreasing = TRUE)
new.d <- data.frame(word = names(new.v),freq = new.v)
head(new.d, 10)
set.seed(1111)
wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
URL <- "https://www.juzimi.com/tags/26437"
title <- read_html(URL) %>% html_nodes(".xlistju") %>% html_text()
docs <- Corpus(VectorSource(title))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
new.dtm <- TermDocumentMatrix(docs)
new.m <- as.matrix(new.dtm)
new.v <- sort(rowSums(new.m),decreasing = TRUE)
new.d <- data.frame(word = names(new.v),freq = new.v)
head(new.d, 10)
set.seed(1111)
wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
new.d <- data.frame(word = names(new.v),freq = new.v)
set.seed(1111)
wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
URL <- "https://www.juzimi.com/tags/26437"
title <- read_html(URL) %>% html_nodes(".xlistju") %>% html_text()
title
docs <- Corpus(VectorSource(title))
inspect(docs)
URL <- "https://www.juzimi.com/tags/26437"
title <- read_html(URL) %>% html_nodes(".xlistju") %>% html_text()
docs <- Corpus(VectorSource(title))
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE)
d <- data.frame(word = names(v),freq = v)
toSpace <- content_transformer(function (x , pattern ){
return (gsub(pattern,'',x))
})
docs <- tm_map(docs, removeNumbers)
docs <- Corpus(VectorSource(title))
toSpace <- content_transformer(function (x , pattern ){
return (gsub(pattern,'',x))
})
docs <- tm_map(docs, removeNumbers)
new.dtm <- TermDocumentMatrix(docs)
new.m <- as.matrix(new.dtm)
new.v <- sort(rowSums(new.m),decreasing = TRUE)
new.d <- data.frame(word = names(new.v),freq = new.v)
wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
library(NLP)
library(tm)
library(jiebaRD)
install.packages("jiebaRD")
install.packages("jiebaR")
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
page.id <- "890212461087699"
token <- "123646328319174|BXykPz_PGpwMR7909eybOoJkktU"
page <- getPage(page.id, token, n = 300)
page <- getPage('https://www.juzimi.com/tags/26437')
page <- ('https://www.juzimi.com/tags/26437')
docs <- Corpus(VectorSource(page$message))
page.id <- "890212461087699"
token <- "123646328319174|BXykPz_PGpwMR7909eybOoJkktU"
page <- ('https://www.juzimi.com/tags/26437')
docs <- Corpus(VectorSource(page$message))
URL <- "https://www.juzimi.com/tags/26437"
page <- read_html(URL) %>% html_nodes(".xlistju") %>% html_text()
docs <- Corpus(VectorSource(page$message))
docs <- Corpus(VectorSource(page))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))}
)
docs <- tm_map(docs, toSpace, "的")
docs <- Corpus(DataframeSource(page))
URL <- "https://www.juzimi.com/tags/26437"
title <- read_html(URL) %>% html_nodes(".xlistju") %>% html_text()
docs <- Corpus(VectorSource(title))
toSpace <- content_transformer(function (x , pattern ){
return (gsub(pattern,'',x))
})
new.dtm <- TermDocumentMatrix(docs)
new.m <- as.matrix(new.dtm)
new.v <- sort(rowSums(new.m),decreasing = TRUE)
new.d <- data.frame(word = names(new.v),freq = new.v)
wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
View(new.dtm)
new.m <- as.matrix(docs)
new.v <- sort(rowSums(new.m),decreasing = TRUE)
new.d <- data.frame(word = names(new.v),freq = new.v)
wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
#wordcloud(words = new.d$word, freq = new.d$freq, min.freq = 1,
#          max.words=200, random.order=FALSE, rot.per=0.35,
#          colors=brewer.pal(8, "Dark2"))
mixseg = worker()
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
freqFrame = freqFrame[-c(1:34),]
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.5),min.freq=10,max.words=50,
random.order=FALSE, random.color=TRUE,
rot.per=0, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
shiny::runApp('C:/CS-X_R/week_678/week678')
install.packages("shinythemes")
install.packages("png")
runApp('C:/CS-X_R/week_678/week678')
runApp('C:/CS-X_R/week_678/week678')
shiny::runApp('C:/CS-X_R/week_678/week678')
